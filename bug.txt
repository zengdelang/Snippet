上层点了，非active，下层都应该非active,那非激活的删除了，下层也应该激活，有可能出现无限循环，循环引用
或者考虑直接使用NodeCanvas的原生机制，或者干脆像Unreal4的蓝图一样直接没有禁用功能，直接再使用的时候将连线去掉来代替禁用功能
禁用功能的好处时直观，使用人一目了然，缺点视对引用的循环引用修改较为麻烦
 
课题1：
	如果判断鼠标点到bezier曲线上


修改使用： Inspector来检视窗口（不用NodeCanvas自身的Inspector内置窗口，使用它不太好和其他插件集成到一个窗口中）
 

WindowsOSUtility优化（目录和文件的处理可以统一起来）
破解unity编辑器自身的AddComponent窗口代码（根据它的代码扩展一个自己的显示窗口用来显示一些自定义菜单项的添加）
 
 
NodeCanvas插件中的图标模式可以精简掉，开发工具的时候还要找图片什么的太麻烦
C# 如何根据一个文件名来获得它的图标？ 直接根据文件扩展名获得图标显示在unity的工具窗口中，而不是自己找一个张图片替代，这样开发工具也很麻烦
去除NodeCanvas中多余的功能，精简功能，减少移植的难度，尽量兼容原生的NodeCanvas机制（可以兼容不少第三方插件的机制，降低重复开发工作）
